I"ì<h3 id="basics">Basics:</h3>

<p>If you havenâ€™t considered encrypting at least part of your Linux machine then you should.  This post isnâ€™t a full on lesson in 
cryptoanalytics, itâ€™s just to provide some resources and notes to myself for future reference.</p>

<p>As far as summaries go, <a href="https://theintercept.com/2015/04/27/encrypting-laptop-like-mean/">Encrypting Your Laptop Like You Mean It</a> by <em>The 
Intercept_</em> is a good one.  Also, <em>WIRED</em>â€™s <a href="http://www.wired.com/insights/2013/05/9-biggest-data-encryption-myths-busted-2/">9 Biggest Data 
Encryption Myths Busted</a> is an informative quick read.</p>

<p>Next, youâ€™ll want to consider your <a href="https://wiki.archlinux.org/index.php/disk_encryption#Choosing_a_setup">threat model</a>.  In short, thatâ€™s:</p>

<ul>
  <li>What do you want to protect?</li>
  <li>From who?</li>
  <li>How do you want to do it?</li>
  <li>How (do you) address weaknesses?</li>
</ul>

<h3 id="data-vs-disk">Data vs Disk:</h3>

<p>The next logical decision is to decide on <a href="https://wiki.archlinux.org/index.php/disk_encryption#Data_encryption_vs_system_encryption">data encryption vs. disk 
encryption</a>.  I settled on only encrypting
<code class="highlighter-rouge">/home</code> based on the following:</p>

<ul>
  <li>Full system encryption was taking a bit to much fiddling (with my currnet system) so Iâ€™ve tabled that for now.</li>
  <li>The data I want to protect is personal data, not system / server / adminstrative content.</li>
  <li>Like a physical safe, when partitions are opened and in use, they can be attacked over the air anyway.  So, on an up-and-running system there 
isnâ€™t a protection differnce between the two (corrections welcome).</li>
  <li>Whatever content I may be protecting will be far easier stollen via the interwebs than physically stealing my machine, impregnating it with 
malicious software, and returning it to me (e.g. an <a href="http://searchsecurity.techtarget.com/definition/evil-maid-attack">Evil Maid attack</a>, <em>see 
below</em>).</li>
  <li>Giving this a whirl has been on my bucket list for a while!</li>
</ul>

<p><em>NOTE:  As an added precaution against Evil Maid attacks  you should password protect your 
<a href="https://wiki.archlinux.org/index.php/Boot_loaders">bootloader</a> and BIOS.  The BIOS password wonâ€™t allow boot options (e.g. to the attachers 
USB drive) to be accessed, thus requiring the removal of the hard drive to complete the attack.</em></p>

<p><em>NOTE 2:  You could also carry around your <code class="highlighter-rouge">/boot</code> partition on a thumb drive of your own, but Iâ€™ve found these get lost or damaged too 
easily.  For casual use like mine, the inconvenience isnâ€™t worth the protection.</em></p>

<h3 id="getting-it-done">Getting it Done:</h3>

<p>Initially I followed the <a href="https://wiki.archlinux.org/index.php/Dm-crypt/Mounting_at_login">corresponding Arch Wiki article</a> word for word as it
seemed pretty straight forward.  A few things to keep in mind though:</p>

<ul>
  <li>Watch out for those dang <code class="highlighter-rouge">\x2d</code>s when making the system service.</li>
  <li>By only encrypting <code class="highlighter-rouge">/home</code> youâ€™ll save some system boot time, but loging in takes notably longer.  Thereâ€™s still the benefit of a faster 
boot if you just need to startup, login as <em>root</em>, and fix something (for example).</li>
</ul>

<p>As it turns out I had issues with the manual scripting method (above) and resorted to using <code class="highlighter-rouge">pam_mount</code>.  This worked out well and didnâ€™t take
any more effort.  Simply follow the <a href="https://wiki.archlinux.org/index.php/Pam_mount">directions on the Arch Wiki</a>.</p>

<hr />

<p><em>Update 04/20/2016</em> - It could have something to do with the X205TAâ€™s funky hardware, or microSD drives (/dev/mmcblkXpY) in general, but I was 
getting frequent error messages from SLiM that it <code class="highlighter-rouge">failed to execute login command</code>.  After loging in as root in another tty I found that 
my drives were getting reported incorrectly by <code class="highlighter-rouge">lsblk</code>.  <code class="highlighter-rouge">/</code> (written to the internal /dev/mmcblk0p1) was being 
reported by as /dev/mmcblk1p1 (removable microSD) mounted to <code class="highlighter-rouge">/</code> â€“ this is after the initial boot.  The quick fix was to use node 
names (/dev/mmcblkXpY) rather than UUID in<code class="highlighter-rouge">/etc/fstab</code>.</p>
:ET