I"Z<p>A couple months ago I began benchmarking ROMs 
for the Nexus 6P, to the tune of 300+ tests.  This marks 
the conclusion of <em>Phase One</em> of my mega project of not 
only testing, but learning more about Android (after a few 
years of rust).</p>

<h3 id="frist-things-first">Frist Things First:</h3>

<p>You can find <a href="https://docs.google.com/spreadsheets/d/1KmZNyyYLXeVFufpmpVK-hl0sieGGy3hC5bjhIXYLU_A/edit?usp=sharing">my data spreadsheet</a> 
shared publicly on Google Drive.  Phase One involved the 
first two pages.  The first page rankes ROMs by their 
average score between AnTuTu Benchmark, GeekBench single 
core, GeekBench multi-core, and Quadrant Benchmark.  The 
second page ranks ROMs by their calculated maximum 
screen-on-time (SOT).  The third page is <em>not</em> for 
comparing ROMs, but i/o schedulers – which will come at a 
much later phase.</p>

<p>The purpose of this project is <em>not</em> to find <strong>the</strong> best 
ROM, but to create a spectrum quantitative data.  Obviously 
certain “must have” features and other intangibles weigh 
heavily in choosing your “daily driver.”</p>

<h4 id="the-testing-process">The Testing Process:</h4>

<ul>
  <li><em>Performance</em>:
    <ul>
      <li>AnTuTu, Quadrant, and GeekBench were each run for 
a given ROM at its default settings.  The average of those 
results was then computed for the ranking variable.</li>
      <li>The process was repeated with the ROMs i/o 
scheduler changed to <em>NOOP</em>, and again with it changed to 
<em>Deadline</em>.</li>
      <li>The highest average scorer of those three 
(default, NOOP, and Deadline) was again run through all 
three benchmarks with each of the following Interactive 
governor profiles applied: ghost pepper, butterfly, 
silverfish, maddog.</li>
    </ul>
  </li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>DISCLOSURE:

Some early ROMs I flashed weren't given the full treatment as I was still fleshing 
out the process.  Others, later, were cut short if I decided from a particular bug 
that the ROM wasn't going to be my "keeper."
</code></pre></div></div>

<ul>
  <li><em>Battery / SOT</em>:
    <ul>
      <li>The (on battery) runtime quota was set at 50 
hours.  Typically that came to 3-5 intervals over 2-4 days.  While arbitrary, it seemed realistic / sustainable and more 
or less capable of accounting for variance in day-to-day 
use.</li>
      <li>Five pieces of data were collected for every 
interval:  runtime, percent of battery used, screen on 
time, percentage of time in deep sleep, and average CPU 
frequency.  The homebrewed calculator I used for the later 
is also featured on page two of the Google Sheet.</li>
      <li>The sum runtime and sum percent battery used were 
used to calculate an “estimated lifespan” (of a 100% 
charge).</li>
      <li>The estimated lifespan and actual screen on 
<em>percentage</em> (of total runtime) were used to calulated an 
estimated maximum screen on time.  This is the ranking 
factor.</li>
      <li>Noted deep sleep is the mean of each 
interval’s deep sleep percentage.  Likewise, average CPU 
frequency is the mean of each interval’s mean CPU 
frequency.</li>
      <li>The ROM’s kernel is noted as this will be 
relevant in later stages.</li>
    </ul>
  </li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>DISCLOSURE:

Governor and i/o scheduler are noted as well.  Both were noted at the default value 
even though benchmarking with non-default values sometimes took place during testing 
intervals.
</code></pre></div></div>

<h4 id="performance-results">Performance Results:</h4>

<table>
  <tbody>
    <tr>
      <td>Mean across all samples</td>
      <td>25254.05496</td>
    </tr>
    <tr>
      <td>Standard Deviation</td>
      <td>3309.171706</td>
    </tr>
    <tr>
      <td>Z = 1</td>
      <td>28563.226666</td>
    </tr>
  </tbody>
</table>

<p>You can run more statistical analysis if you want, but just eyeballing the data we can see that:</p>

<ul>
  <li>Chroma, Slim, and AOSiP did very well (bear in mind, the AOSiP kernel is OC’d a bit).</li>
  <li>There are some Top 20 appearances from Sinless, Exodus, and Bliss.</li>
  <li>11/20 of the Top 20 had the default i/o scheduler.</li>
  <li>Of the top 20, there were only 5 appearances by custom 
interactive profiles (3 x ghost pepper, 2 x maddog).</li>
</ul>

<table>
  <thead>
    <tr>
      <th>Average Score per I/O Scheduler</th>
      <th> </th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>FIOPS</td>
      <td>28512.75</td>
    </tr>
    <tr>
      <td>NOOP</td>
      <td>25184.33333</td>
    </tr>
    <tr>
      <td>BFQ</td>
      <td>25160.15385</td>
    </tr>
    <tr>
      <td>Deadline</td>
      <td>24444.97024</td>
    </tr>
    <tr>
      <td>CFQ</td>
      <td>24326.69792</td>
    </tr>
  </tbody>
</table>

<table>
  <thead>
    <tr>
      <th>Average Score per Governor Profile</th>
      <th> </th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>Ghost Pepper</td>
      <td>26240.13889</td>
    </tr>
    <tr>
      <td>Default</td>
      <td>25546.9805</td>
    </tr>
    <tr>
      <td>Butterfly</td>
      <td>24743.92361</td>
    </tr>
    <tr>
      <td>Maddog</td>
      <td>23995.5</td>
    </tr>
    <tr>
      <td>Silverfish</td>
      <td>23791.21212</td>
    </tr>
  </tbody>
</table>

<h4 id="battery-results">Battery Results:</h4>

<table>
  <thead>
    <tr>
      <th>Battery Quick Stats</th>
      <th> </th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>Mean Est. Lifespan</td>
      <td>21.02 hours</td>
    </tr>
    <tr>
      <td>Est. Lifespan SD</td>
      <td>3.42</td>
    </tr>
    <tr>
      <td>Est. Lifespan Z=1</td>
      <td>24.447 hours</td>
    </tr>
    <tr>
      <td>Mean SOT</td>
      <td>3.885 hours</td>
    </tr>
    <tr>
      <td>SOT SD</td>
      <td>0.3633</td>
    </tr>
    <tr>
      <td>SOT Z=1</td>
      <td>4.249</td>
    </tr>
  </tbody>
</table>

<h4 id="going-forward">Going Forward:</h4>

<ul>
  <li>
    <p><em>Phase 2</em>:  I will select some personal favorite ROMs / 
top performers (z=1) here and repeat this testing proces 
with a closer focus on <em>custom kernels</em>.</p>
  </li>
  <li>
    <p><em>Phase 3</em>:  Once I’ve got a ROM + Kernel combo I like, 
I’ll look closer at how Interactive governor profiles 
affect performance and battery life – as well as manually 
create an optimized profile based on my usage.</p>
  </li>
  <li>
    <p><em>Phase 4</em>:  Finally I’ll delve into the details of i/o 
schedulers as well as other i/o and build.prop tweaks.</p>
  </li>
</ul>

<p>Stay tuned!</p>
:ET